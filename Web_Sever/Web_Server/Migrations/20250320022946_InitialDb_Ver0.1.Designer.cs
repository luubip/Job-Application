// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Server.Data;

#nullable disable

namespace Web_Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250320022946_InitialDb_Ver0.1")]
    partial class InitialDb_Ver01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web_Server.Models.ApplyPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecruitmentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecruitmentId");

                    b.HasIndex("UserId");

                    b.ToTable("ApplyPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVName = "Jane's CV",
                            CreatedAt = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecruitmentId = 1,
                            Status = 0,
                            Text = "Applying for Software Developer",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CVName = "John's CV",
                            CreatedAt = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecruitmentId = 2,
                            Status = 0,
                            Text = "Applying for Data Analyst",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Web_Server.Models.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("CVs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John's CV",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane's CV",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Web_Server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Software Engineering"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Data Science"
                        });
                });

            modelBuilder.Entity("Web_Server.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "789 Market St",
                            Description = "A leading tech company",
                            Email = "contact@techcorp.com",
                            Logo = "a",
                            Name = "Tech Corp",
                            PhoneNumber = "1112223333",
                            Status = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "321 Wall St",
                            Description = "A finance firm",
                            Email = "info@financeinc.com",
                            Logo = "a",
                            Name = "Finance Inc",
                            PhoneNumber = "4445556666",
                            Status = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Web_Server.Models.FollowCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("FollowCompanies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Web_Server.Models.FollowJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecruitmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecruitmentId");

                    b.HasIndex("UserId");

                    b.ToTable("FollowJobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecruitmentId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RecruitmentId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Web_Server.Models.Recruitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Recruitments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hanoi",
                            CategoryId = 1,
                            CompanyId = 1,
                            CreatedAt = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = ".",
                            Description = "Looking for a full-stack developer",
                            Experience = "2 years",
                            Quantity = 10,
                            Rank = "S",
                            Salary = 80000.0,
                            Status = 1,
                            Title = "Software Developer",
                            Type = "Full-Time",
                            View = 100
                        },
                        new
                        {
                            Id = 2,
                            Address = "Hanoi",
                            CategoryId = 2,
                            CompanyId = 2,
                            CreatedAt = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = ".",
                            Description = "Seeking an experienced data analyst",
                            Experience = "3 years",
                            Quantity = 10,
                            Rank = "S",
                            Salary = 75000.0,
                            Status = 1,
                            Title = "Data Analyst",
                            Type = "Full-Time",
                            View = 100
                        });
                });

            modelBuilder.Entity("Web_Server.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Candidate"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Recruiter"
                        });
                });

            modelBuilder.Entity("Web_Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CVId = 1,
                            Description = "Software Developer",
                            Email = "john@example.com",
                            FullName = "John Doe",
                            Image = "test",
                            Password = "hashedpassword",
                            PhoneNumber = "1234567890",
                            RoleId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            CVId = 2,
                            Description = "Data Analyst",
                            Email = "jane@example.com",
                            FullName = "Jane Smith",
                            Image = "test",
                            Password = "hashedpassword",
                            PhoneNumber = "9876543210",
                            RoleId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Web_Server.Models.ApplyPost", b =>
                {
                    b.HasOne("Web_Server.Models.Recruitment", "Recruitment")
                        .WithMany()
                        .HasForeignKey("RecruitmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recruitment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Server.Models.CV", b =>
                {
                    b.HasOne("Web_Server.Models.User", "User")
                        .WithOne("CV")
                        .HasForeignKey("Web_Server.Models.CV", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Server.Models.Company", b =>
                {
                    b.HasOne("Web_Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Server.Models.FollowCompany", b =>
                {
                    b.HasOne("Web_Server.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Web_Server.Models.User", "User")
                        .WithMany("FollowCompany")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Server.Models.FollowJob", b =>
                {
                    b.HasOne("Web_Server.Models.Recruitment", "Recruitment")
                        .WithMany()
                        .HasForeignKey("RecruitmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Server.Models.User", "User")
                        .WithMany("FollowJobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recruitment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Server.Models.Recruitment", b =>
                {
                    b.HasOne("Web_Server.Models.Category", "Category")
                        .WithMany("Recruitments")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Server.Models.Company", "Company")
                        .WithMany("Recruitments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web_Server.Models.User", null)
                        .WithMany("Recruitments")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Web_Server.Models.User", b =>
                {
                    b.HasOne("Web_Server.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Web_Server.Models.Category", b =>
                {
                    b.Navigation("Recruitments");
                });

            modelBuilder.Entity("Web_Server.Models.Company", b =>
                {
                    b.Navigation("Recruitments");
                });

            modelBuilder.Entity("Web_Server.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Web_Server.Models.User", b =>
                {
                    b.Navigation("CV")
                        .IsRequired();

                    b.Navigation("FollowCompany");

                    b.Navigation("FollowJobs");

                    b.Navigation("Recruitments");
                });
#pragma warning restore 612, 618
        }
    }
}
